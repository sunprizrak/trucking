###########
# BUILDER #
###########

FROM python:3.10.11-alpine as builder

# set work directory
WORKDIR /usr/src/trucking

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependecies
RUN apk update && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel -no-cache-dir --no-deps --wheel-dir /usr/src/trucking/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.10.11-alpine

# create directory for the app
RUN mkdir -p /home/trucking

# create the app user
RUN addgroup -S trucking_group && adduser -S trucking_user -G tucking_group

# create the appropriate directories
ENV HOME=/home/trucking
ENV APP_HOME=/home/trucking/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/trucking/wheels /wheels
COPY --from=builder /usr/src/trucking/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R trucking_user:trucking_group $APP_HOME

# change to the app user
USER trucking_user

ENTRYPOINT ["/home/trucking/web/entrypoint.prod.sh"]